@use '@angular/material' as mat;

@include mat.core();

$my-app-primary: mat.define-palette(mat.$light-green-palette);
$my-app-accent: mat.define-palette(mat.$indigo-palette, A200, A100, A400);
$my-app-warn: mat.define-palette(mat.$red-palette);

$my-app-theme: mat.define-light-theme(
  (
    color: (
      primary: $my-app-primary,
      accent: $my-app-accent,
      warn: $my-app-warn,
    ),
  )
);

@mixin _theme-property($theme, $property, $hue) {
    $primary: map.get($theme, primary);
    $accent: map.get($theme, accent);
    $warn: map.get($theme, warn);
    $background: map.get($theme, background);
    $foreground: map.get($theme, foreground);
  
    &.mat-primary {
      #{$property}: theming.get-color-from-palette($primary, $hue);
    }
    &.mat-accent {
      #{$property}: theming.get-color-from-palette($accent, $hue);
    }
    &.mat-warn {
      #{$property}: theming.get-color-from-palette($warn, $hue);
    }
  
    &.mat-primary,
    &.mat-accent,
    &.mat-warn,
    &.mat-button-disabled {
      &.mat-button-disabled {
        $palette: if($property == "color", $foreground, $background);
        #{$property}: theming.get-color-from-palette($palette, disabled-button);
      }
    }
  }
  
  @mixin color($config-or-theme) {
    $config: theming.get-color-config($config-or-theme);
    $foreground: map.get($config, foreground);
  
    .mat-button,
    .mat-icon-button,
    .mat-stroked-button {
      @include _theme-property($config, "color", text);
    }
  }

  $my-app-theme: mat.define-light-theme(
  (
    color: (
      primary: $my-app-primary,
      accent: $my-app-accent,
      warn: $my-app-warn,
    ),
  )
);
@include mat.core-theme($my-app-theme);
@include mat.toolbar-theme($my-app-theme);
@include mat.all-component-themes($my-app-theme);

  



html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}